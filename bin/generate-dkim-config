#!/bin/sh

touch /tmp/vhost.tmp
touch /tmp/config/postfix-virtual.cf

# Getting domains from mail accounts
while IFS=$'|' read login pass
do
	domain=$(echo ${login} | cut -d @ -f2)
	echo ${domain} >> /tmp/vhost.tmp
done < /tmp/config/postfix-accounts.cf

# Getting domains from mail aliases
while read from to
do
	# Setting variables for better readability
	uname=$(echo ${from} | cut -d @ -f1)
	domain=$(echo ${from} | cut -d @ -f2)
	# if they are equal it means the line looks like: "user1     other@domain.tld"
	test "$uname" != "$domain" && echo ${domain} >> /tmp/vhost.tmp
done < /tmp/config/postfix-virtual.cf

# Keeping unique entries
if [ -f /tmp/vhost.tmp ]; then
	cat /tmp/vhost.tmp | sort | uniq > /tmp/vhost && rm /tmp/vhost.tmp
fi

grep -vE '^(\s*$|#)' /tmp/vhost | while read domainname; do
	mkdir -p /tmp/config/opendkim/keys/$domainname

	if [ ! -f "/tmp/config/opendkim/keys/$domainname/mail.private" ]; then
		echo "Creating DKIM private key /tmp/config/opendkim/keys/$domainname/mail.private"
		opendkim-genkey --subdomains --domain=$domainname --selector=mail -D /tmp/config/opendkim/keys/$domainname
	fi

	# Write to KeyTable if necessary
	keytableentry="mail._domainkey.$domainname $domainname:mail:/etc/opendkim/keys/$domainname/mail.private"
	if [ ! -f "/tmp/config/opendkim/KeyTable" ]; then
		echo "Creating DKIM KeyTable"
		echo $keytableentry > /tmp/config/opendkim/KeyTable
	else
		if ! grep -q "$keytableentry" "/tmp/config/opendkim/KeyTable" ; then
	    	echo $keytableentry >> /tmp/config/opendkim/KeyTable
		fi
	fi

	# Write to SigningTable if necessary
	signingtableentry="*@$domainname mail._domainkey.$domainname"
	if [ ! -f "/tmp/config/opendkim/SigningTable" ]; then
		echo "Creating DKIM SigningTable"
		echo "*@$domainname mail._domainkey.$domainname" > /tmp/config/opendkim/SigningTable
	else
		if ! grep -q "$signingtableentry" "/tmp/config/opendkim/SigningTable" ; then
	    	echo $signingtableentry >> /tmp/config/opendkim/SigningTable
		fi
	fi
done

# Creates TrustedHosts if missing
if [ ! -f "/tmp/config/opendkim/TrustedHosts" ]; then
	echo "Creating DKIM TrustedHosts";
	echo "127.0.0.1" > /tmp/config/opendkim/TrustedHosts
	echo "localhost" >> /tmp/config/opendkim/TrustedHosts
fi
